services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongodb_data:/data/db

  node-app:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: node-app
    environment:
      MONGO_URL: mongodb://admin:secret@mongodb:27017/wildhaven-db?authSource=admin
    ports:
      - "3800:3800"
    depends_on:
      - mongodb
    networks:
      - app-network
    volumes:
        - ./backend/src:/usr/src/app/src
        - uploaded_images:/usr/src/app/uploads  # Montar el volumen para las im치genes
  
  angular-app:
    build:
      context: ./frontend/WildHaven/
      dockerfile: Dockerfile
    container_name: angular-app
    ports:
      - "4200:4200"
    networks:
      - app-network
    volumes:
      - ./frontend/WildHaven/src:/usr/src/frontend/src
      - /usr/src/frontend/node_modules

  loki:
    image: grafana/loki:2.8.2
    container_name: loki
    ports:
      - "3100:3100"  # Puerto donde Loki escuchar치
    networks:
      - app-network
    volumes:
      - ./loki/config/loki-config.yaml:/etc/loki/config.yaml
      # - loki_data:/loki
  promtail:
    image: grafana/promtail:2.8.2
    container_name: promtail
    networks:
      - app-network
    volumes:
      - ./promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/log:/var/log  # Para recolectar logs de los contenedores
      - /var/lib/docker/containers:/var/lib/docker/containers  # Para logs de contenedores
    command: -config.file=/etc/promtail/promtail-config.yaml


  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin  # Usuario por defecto
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Contrase침a por defecto
    networks:
      - app-network
    depends_on:
      - loki
      
networks:
  app-network:
    driver: bridge
    

volumes:
  mongodb_data:
    driver: local
  grafana_data:
  loki_data:
  uploaded_images:  # Volumen para las im치genes subidas
    driver: local
