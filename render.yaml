services:
  - type: web
    name: mongodb
    env: docker
    image: "mongo:latest"  # Asegúrate de incluir la etiqueta correcta para la última versión
    container_name: mongodb  # Nombre del contenedor (opcional)
    envVars:
      - key: MONGO_INITDB_ROOT_USERNAME
        value: admin
      - key: MONGO_INITDB_ROOT_PASSWORD
        value: secret
    ports:
      - port: 27017  # Puerto expuesto en el host
    mount:
      - source: ./mongodb_data
        target: /data/db  # Ruta donde se almacenan los datos de MongoDB en el contenedor

  - type: web
    name: node-app
    env: docker
    build:
      context: ./backend/
      dockerfilePath: Dockerfile
    container_name: node-app
    envVars:
      - key: MONGO_URL
        value: mongodb://admin:secret@mongodb:27017/wildhaven-db?authSource=admin
    ports:
      - port: 3800
    dependsOn:
      - mongodb
    mount:
      - source: ./backend/src
        target: /usr/src/app/src
      - source: ./uploaded_images
        target: /usr/src/app/uploads

  - type: web
    name: angular-app
    env: docker
    build:
      context: ./frontend/WildHaven/
      dockerfilePath: Dockerfile
    container_name: angular-app
    ports:
      - port: 4200
    mount:
      - source: ./frontend/WildHaven/src
        target: /usr/src/frontend/src
      - source: ./frontend/WildHaven/node_modules
        target: /usr/src/frontend/node_modules

  - type: web
    name: loki
    env: docker
    image: grafana/loki:2.8.2
    container_name: loki
    ports:
      - port: 3100
    mount:
      - source: ./loki/config/loki-config.yaml
        target: /etc/loki/config.yaml

  - type: web
    name: promtail
    env: docker
    image: grafana/promtail:2.8.2
    container_name: promtail
    command: -config.file=/etc/promtail/promtail-config.yaml
    mount:
      - source: ./promtail/config/promtail-config.yaml
        target: /etc/promtail/promtail-config.yaml
      - source: /var/log
        target: /var/log
      - source: /var/lib/docker/containers
        target: /var/lib/docker/containers

  - type: web
    name: grafana
    env: docker
    image: grafana/grafana:10.1.0
    container_name: grafana
    ports:
      - port: 3000
    envVars:
      - key: GF_SECURITY_ADMIN_USER
        value: admin
      - key: GF_SECURITY_ADMIN_PASSWORD
        value: admin
    mount:
      - source: ./grafana_data
        target: /var/lib/grafana
    dependsOn:
      - loki
